@page "/calculator"
@using System

<PageTitle>Calculator</PageTitle>

<h3>Calculator</h3>

<div>
    <div>@currentNumber</div>

<div class="calculator-row">
        <button @onclick="(() => NumberClicked(1))">1</button>
        <button @onclick="(() => NumberClicked(2))">2</button>
        <button @onclick="(() => NumberClicked(3))">3</button>
        <button @onclick="(() => OperatorClicked('+'))">+</button>
</div>
<div class="calculator-row">
        <button @onclick="(() => NumberClicked(4))">4</button>
        <button @onclick="(() => NumberClicked(5))">5</button>
        <button @onclick="(() => NumberClicked(6))">6</button>
        <button @onclick="(() => OperatorClicked('-'))">-</button>
</div>
<div class="calculator-row">
        <button @onclick="(() => NumberClicked(7))">7</button>
        <button @onclick="(() => NumberClicked(8))">8</button>
        <button @onclick="(() => NumberClicked(9))">9</button>
        <button @onclick="(() => OperatorClicked('*'))">*</button>
</div>
<div class="calculator-row">
        <button @onclick="CalculateResult">=</button>
        <button @onclick="(() => NumberClicked(0))">0</button>
        <button @onclick="(() => OperatorClicked('/'))">/</button>
</div>
  
</div>

@code {
    string currentNumber = "";
    char? lastOperator = null;
    int? firstNumber = null;

    void NumberClicked(int number)
    {
        currentNumber += number.ToString();
    }

    void OperatorClicked(char operatorChar)
    {
        if (!string.IsNullOrEmpty(currentNumber))
        {
            if (lastOperator != null)
            {
                CalculateResult();
            }

            firstNumber = int.Parse(currentNumber);
            currentNumber = "";
            lastOperator = operatorChar;
        }
    }

    void CalculateResult()
    {
        if (!string.IsNullOrEmpty(currentNumber) && firstNumber != null && lastOperator != null)
        {
            int secondNumber = int.Parse(currentNumber);
            int result = 0;
            switch (lastOperator)
            {
                case '+':
                    result = firstNumber.Value + secondNumber;
                    break;
                case '-':
                    result = firstNumber.Value - secondNumber;
                    break;
                case '*':
                    result = firstNumber.Value * secondNumber;
                    break;
                case '/':
                    if (secondNumber != 0)
                    {
                        result = firstNumber.Value / secondNumber;
                    }
                    else
                    {}
                    break;
            }
            currentNumber = result.ToString();
            firstNumber = result;
            lastOperator = null;
        }
    }
}